Class {
	#name : #Winit30NamedKey,
	#superclass : #WinitEnum,
	#classVars : [
		'AVRInputKey',
		'AVRPowerKey',
		'AcceptKey',
		'AgainKey',
		'AllCandidatesKey',
		'AlphanumericKey',
		'AltGraphKey',
		'AltKey',
		'AppSwitchKey',
		'ArrowDownKey',
		'ArrowLeftKey',
		'ArrowRightKey',
		'ArrowUpKey',
		'AttnKey',
		'AudioBalanceLeftKey',
		'AudioBalanceRightKey',
		'AudioBassBoostDownKey',
		'AudioBassBoostToggleKey',
		'AudioBassBoostUpKey',
		'AudioFaderFrontKey',
		'AudioFaderRearKey',
		'AudioSurroundModeNextKey',
		'AudioTrebleDownKey',
		'AudioTrebleUpKey',
		'AudioVolumeDownKey',
		'AudioVolumeMuteKey',
		'AudioVolumeUpKey',
		'BackspaceKey',
		'BrightnessDownKey',
		'BrightnessUpKey',
		'BrowserBackKey',
		'BrowserFavoritesKey',
		'BrowserForwardKey',
		'BrowserHomeKey',
		'BrowserRefreshKey',
		'BrowserSearchKey',
		'BrowserStopKey',
		'CallKey',
		'CameraFocusKey',
		'CameraKey',
		'CancelKey',
		'CapsLockKey',
		'ChannelDownKey',
		'ChannelUpKey',
		'ClearKey',
		'CloseKey',
		'ClosedCaptionToggleKey',
		'CodeInputKey',
		'ColorF0RedKey',
		'ColorF1GreenKey',
		'ColorF2YellowKey',
		'ColorF3BlueKey',
		'ColorF4GreyKey',
		'ColorF5BrownKey',
		'ComposeKey',
		'ContextMenuKey',
		'ControlKey',
		'ConvertKey',
		'CopyKey',
		'CrSelKey',
		'CutKey',
		'DVRKey',
		'DeleteKey',
		'DimmerKey',
		'DisplaySwapKey',
		'EisuKey',
		'EjectKey',
		'EndCallKey',
		'EndKey',
		'EnterKey',
		'EraseEofKey',
		'EscapeKey',
		'ExSelKey',
		'ExecuteKey',
		'ExitKey',
		'F10Key',
		'F11Key',
		'F12Key',
		'F13Key',
		'F14Key',
		'F15Key',
		'F16Key',
		'F17Key',
		'F18Key',
		'F19Key',
		'F1Key',
		'F20Key',
		'F21Key',
		'F22Key',
		'F23Key',
		'F24Key',
		'F25Key',
		'F26Key',
		'F27Key',
		'F28Key',
		'F29Key',
		'F2Key',
		'F30Key',
		'F31Key',
		'F32Key',
		'F33Key',
		'F34Key',
		'F35Key',
		'F3Key',
		'F4Key',
		'F5Key',
		'F6Key',
		'F7Key',
		'F8Key',
		'F9Key',
		'FavoriteClear0Key',
		'FavoriteClear1Key',
		'FavoriteClear2Key',
		'FavoriteClear3Key',
		'FavoriteRecall0Key',
		'FavoriteRecall1Key',
		'FavoriteRecall2Key',
		'FavoriteRecall3Key',
		'FavoriteStore0Key',
		'FavoriteStore1Key',
		'FavoriteStore2Key',
		'FavoriteStore3Key',
		'FinalModeKey',
		'FindKey',
		'FnKey',
		'FnLockKey',
		'GoBackKey',
		'GoHomeKey',
		'GroupFirstKey',
		'GroupLastKey',
		'GroupNextKey',
		'GroupPreviousKey',
		'GuideKey',
		'GuideNextDayKey',
		'GuidePreviousDayKey',
		'HangulModeKey',
		'HanjaModeKey',
		'HankakuKey',
		'HeadsetHookKey',
		'HelpKey',
		'HibernateKey',
		'HiraganaKatakanaKey',
		'HiraganaKey',
		'HomeKey',
		'HyperKey',
		'InfoKey',
		'InsertKey',
		'InstantReplayKey',
		'JunjaModeKey',
		'KanaModeKey',
		'KanjiModeKey',
		'KatakanaKey',
		'Key11Key',
		'Key12Key',
		'LastNumberRedialKey',
		'LaunchApplication1Key',
		'LaunchApplication2Key',
		'LaunchCalendarKey',
		'LaunchContactsKey',
		'LaunchMailKey',
		'LaunchMediaPlayerKey',
		'LaunchMusicPlayerKey',
		'LaunchPhoneKey',
		'LaunchScreenSaverKey',
		'LaunchSpreadsheetKey',
		'LaunchWebBrowserKey',
		'LaunchWebCamKey',
		'LaunchWordProcessorKey',
		'LinkKey',
		'ListProgramKey',
		'LiveContentKey',
		'LockKey',
		'LogOffKey',
		'MailForwardKey',
		'MailReplyKey',
		'MailSendKey',
		'MannerModeKey',
		'MediaAppsKey',
		'MediaAudioTrackKey',
		'MediaCloseKey',
		'MediaFastForwardKey',
		'MediaLastKey',
		'MediaPauseKey',
		'MediaPlayKey',
		'MediaPlayPauseKey',
		'MediaRecordKey',
		'MediaRewindKey',
		'MediaSkipBackwardKey',
		'MediaSkipForwardKey',
		'MediaStepBackwardKey',
		'MediaStepForwardKey',
		'MediaStopKey',
		'MediaTopMenuKey',
		'MediaTrackNextKey',
		'MediaTrackPreviousKey',
		'MetaKey',
		'MicrophoneToggleKey',
		'MicrophoneVolumeDownKey',
		'MicrophoneVolumeMuteKey',
		'MicrophoneVolumeUpKey',
		'ModeChangeKey',
		'NavigateInKey',
		'NavigateNextKey',
		'NavigateOutKey',
		'NavigatePreviousKey',
		'NewKey',
		'NextCandidateKey',
		'NextFavoriteChannelKey',
		'NextUserProfileKey',
		'NonConvertKey',
		'NotificationKey',
		'NumLockKey',
		'OnDemandKey',
		'OpenKey',
		'PageDownKey',
		'PageUpKey',
		'PairingKey',
		'PasteKey',
		'PauseKey',
		'PinPDownKey',
		'PinPMoveKey',
		'PinPToggleKey',
		'PinPUpKey',
		'PlayKey',
		'PlaySpeedDownKey',
		'PlaySpeedResetKey',
		'PlaySpeedUpKey',
		'PowerKey',
		'PowerOffKey',
		'PreviousCandidateKey',
		'PrintKey',
		'PrintScreenKey',
		'ProcessKey',
		'PropsKey',
		'RandomToggleKey',
		'RcLowBatteryKey',
		'RecordSpeedNextKey',
		'RedoKey',
		'RfBypassKey',
		'RomajiKey',
		'STBInputKey',
		'STBPowerKey',
		'SaveKey',
		'ScanChannelsToggleKey',
		'ScreenModeNextKey',
		'ScrollLockKey',
		'SelectKey',
		'SettingsKey',
		'ShiftKey',
		'SingleCandidateKey',
		'Soft1Key',
		'Soft2Key',
		'Soft3Key',
		'Soft4Key',
		'SpaceKey',
		'SpeechCorrectionListKey',
		'SpeechInputToggleKey',
		'SpellCheckKey',
		'SplitScreenToggleKey',
		'StandbyKey',
		'SubtitleKey',
		'SuperKey',
		'SymbolKey',
		'SymbolLockKey',
		'TV3DModeKey',
		'TVAntennaCableKey',
		'TVAudioDescriptionKey',
		'TVAudioDescriptionMixDownKey',
		'TVAudioDescriptionMixUpKey',
		'TVContentsMenuKey',
		'TVDataServiceKey',
		'TVInputComponent1Key',
		'TVInputComponent2Key',
		'TVInputComposite1Key',
		'TVInputComposite2Key',
		'TVInputHDMI1Key',
		'TVInputHDMI2Key',
		'TVInputHDMI3Key',
		'TVInputHDMI4Key',
		'TVInputKey',
		'TVInputVGA1Key',
		'TVKey',
		'TVMediaContextKey',
		'TVNetworkKey',
		'TVNumberEntryKey',
		'TVPowerKey',
		'TVRadioServiceKey',
		'TVSatelliteBSKey',
		'TVSatelliteCSKey',
		'TVSatelliteKey',
		'TVSatelliteToggleKey',
		'TVTerrestrialAnalogKey',
		'TVTerrestrialDigitalKey',
		'TVTimerKey',
		'TabKey',
		'TeletextKey',
		'UndoKey',
		'UnknownKey',
		'VideoModeNextKey',
		'VoiceDialKey',
		'WakeUpKey',
		'WinkKey',
		'ZenkakuHankakuKey',
		'ZenkakuKey',
		'ZoomInKey',
		'ZoomOutKey',
		'ZoomToggleKey'
	],
	#category : #'Winit-External'
}

{ #category : #'accessing enum' }
Winit30NamedKey class >> AVRInputKey [
	"This method was automatically generated"
	^ AVRInputKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AVRPowerKey [
	"This method was automatically generated"
	^ AVRPowerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AcceptKey [
	"This method was automatically generated"
	^ AcceptKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AgainKey [
	"This method was automatically generated"
	^ AgainKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AllCandidatesKey [
	"This method was automatically generated"
	^ AllCandidatesKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AlphanumericKey [
	"This method was automatically generated"
	^ AlphanumericKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AltGraphKey [
	"This method was automatically generated"
	^ AltGraphKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AltKey [
	"This method was automatically generated"
	^ AltKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AppSwitchKey [
	"This method was automatically generated"
	^ AppSwitchKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ArrowDownKey [
	"This method was automatically generated"
	^ ArrowDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ArrowLeftKey [
	"This method was automatically generated"
	^ ArrowLeftKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ArrowRightKey [
	"This method was automatically generated"
	^ ArrowRightKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ArrowUpKey [
	"This method was automatically generated"
	^ ArrowUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AttnKey [
	"This method was automatically generated"
	^ AttnKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioBalanceLeftKey [
	"This method was automatically generated"
	^ AudioBalanceLeftKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioBalanceRightKey [
	"This method was automatically generated"
	^ AudioBalanceRightKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioBassBoostDownKey [
	"This method was automatically generated"
	^ AudioBassBoostDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioBassBoostToggleKey [
	"This method was automatically generated"
	^ AudioBassBoostToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioBassBoostUpKey [
	"This method was automatically generated"
	^ AudioBassBoostUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioFaderFrontKey [
	"This method was automatically generated"
	^ AudioFaderFrontKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioFaderRearKey [
	"This method was automatically generated"
	^ AudioFaderRearKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioSurroundModeNextKey [
	"This method was automatically generated"
	^ AudioSurroundModeNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioTrebleDownKey [
	"This method was automatically generated"
	^ AudioTrebleDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioTrebleUpKey [
	"This method was automatically generated"
	^ AudioTrebleUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioVolumeDownKey [
	"This method was automatically generated"
	^ AudioVolumeDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioVolumeMuteKey [
	"This method was automatically generated"
	^ AudioVolumeMuteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> AudioVolumeUpKey [
	"This method was automatically generated"
	^ AudioVolumeUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BackspaceKey [
	"This method was automatically generated"
	^ BackspaceKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrightnessDownKey [
	"This method was automatically generated"
	^ BrightnessDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrightnessUpKey [
	"This method was automatically generated"
	^ BrightnessUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserBackKey [
	"This method was automatically generated"
	^ BrowserBackKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserFavoritesKey [
	"This method was automatically generated"
	^ BrowserFavoritesKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserForwardKey [
	"This method was automatically generated"
	^ BrowserForwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserHomeKey [
	"This method was automatically generated"
	^ BrowserHomeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserRefreshKey [
	"This method was automatically generated"
	^ BrowserRefreshKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserSearchKey [
	"This method was automatically generated"
	^ BrowserSearchKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> BrowserStopKey [
	"This method was automatically generated"
	^ BrowserStopKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CallKey [
	"This method was automatically generated"
	^ CallKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CameraFocusKey [
	"This method was automatically generated"
	^ CameraFocusKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CameraKey [
	"This method was automatically generated"
	^ CameraKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CancelKey [
	"This method was automatically generated"
	^ CancelKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CapsLockKey [
	"This method was automatically generated"
	^ CapsLockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ChannelDownKey [
	"This method was automatically generated"
	^ ChannelDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ChannelUpKey [
	"This method was automatically generated"
	^ ChannelUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ClearKey [
	"This method was automatically generated"
	^ ClearKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CloseKey [
	"This method was automatically generated"
	^ CloseKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ClosedCaptionToggleKey [
	"This method was automatically generated"
	^ ClosedCaptionToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CodeInputKey [
	"This method was automatically generated"
	^ CodeInputKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF0RedKey [
	"This method was automatically generated"
	^ ColorF0RedKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF1GreenKey [
	"This method was automatically generated"
	^ ColorF1GreenKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF2YellowKey [
	"This method was automatically generated"
	^ ColorF2YellowKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF3BlueKey [
	"This method was automatically generated"
	^ ColorF3BlueKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF4GreyKey [
	"This method was automatically generated"
	^ ColorF4GreyKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ColorF5BrownKey [
	"This method was automatically generated"
	^ ColorF5BrownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ComposeKey [
	"This method was automatically generated"
	^ ComposeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ContextMenuKey [
	"This method was automatically generated"
	^ ContextMenuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ControlKey [
	"This method was automatically generated"
	^ ControlKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ConvertKey [
	"This method was automatically generated"
	^ ConvertKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CopyKey [
	"This method was automatically generated"
	^ CopyKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CrSelKey [
	"This method was automatically generated"
	^ CrSelKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> CutKey [
	"This method was automatically generated"
	^ CutKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> DVRKey [
	"This method was automatically generated"
	^ DVRKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> DeleteKey [
	"This method was automatically generated"
	^ DeleteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> DimmerKey [
	"This method was automatically generated"
	^ DimmerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> DisplaySwapKey [
	"This method was automatically generated"
	^ DisplaySwapKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EisuKey [
	"This method was automatically generated"
	^ EisuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EjectKey [
	"This method was automatically generated"
	^ EjectKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EndCallKey [
	"This method was automatically generated"
	^ EndCallKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EndKey [
	"This method was automatically generated"
	^ EndKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EnterKey [
	"This method was automatically generated"
	^ EnterKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EraseEofKey [
	"This method was automatically generated"
	^ EraseEofKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> EscapeKey [
	"This method was automatically generated"
	^ EscapeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ExSelKey [
	"This method was automatically generated"
	^ ExSelKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ExecuteKey [
	"This method was automatically generated"
	^ ExecuteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ExitKey [
	"This method was automatically generated"
	^ ExitKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F10Key [
	"This method was automatically generated"
	^ F10Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F11Key [
	"This method was automatically generated"
	^ F11Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F12Key [
	"This method was automatically generated"
	^ F12Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F13Key [
	"This method was automatically generated"
	^ F13Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F14Key [
	"This method was automatically generated"
	^ F14Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F15Key [
	"This method was automatically generated"
	^ F15Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F16Key [
	"This method was automatically generated"
	^ F16Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F17Key [
	"This method was automatically generated"
	^ F17Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F18Key [
	"This method was automatically generated"
	^ F18Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F19Key [
	"This method was automatically generated"
	^ F19Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F1Key [
	"This method was automatically generated"
	^ F1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F20Key [
	"This method was automatically generated"
	^ F20Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F21Key [
	"This method was automatically generated"
	^ F21Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F22Key [
	"This method was automatically generated"
	^ F22Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F23Key [
	"This method was automatically generated"
	^ F23Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F24Key [
	"This method was automatically generated"
	^ F24Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F25Key [
	"This method was automatically generated"
	^ F25Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F26Key [
	"This method was automatically generated"
	^ F26Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F27Key [
	"This method was automatically generated"
	^ F27Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F28Key [
	"This method was automatically generated"
	^ F28Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F29Key [
	"This method was automatically generated"
	^ F29Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F2Key [
	"This method was automatically generated"
	^ F2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F30Key [
	"This method was automatically generated"
	^ F30Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F31Key [
	"This method was automatically generated"
	^ F31Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F32Key [
	"This method was automatically generated"
	^ F32Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F33Key [
	"This method was automatically generated"
	^ F33Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F34Key [
	"This method was automatically generated"
	^ F34Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F35Key [
	"This method was automatically generated"
	^ F35Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F3Key [
	"This method was automatically generated"
	^ F3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F4Key [
	"This method was automatically generated"
	^ F4Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F5Key [
	"This method was automatically generated"
	^ F5Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F6Key [
	"This method was automatically generated"
	^ F6Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F7Key [
	"This method was automatically generated"
	^ F7Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F8Key [
	"This method was automatically generated"
	^ F8Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> F9Key [
	"This method was automatically generated"
	^ F9Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteClear0Key [
	"This method was automatically generated"
	^ FavoriteClear0Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteClear1Key [
	"This method was automatically generated"
	^ FavoriteClear1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteClear2Key [
	"This method was automatically generated"
	^ FavoriteClear2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteClear3Key [
	"This method was automatically generated"
	^ FavoriteClear3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteRecall0Key [
	"This method was automatically generated"
	^ FavoriteRecall0Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteRecall1Key [
	"This method was automatically generated"
	^ FavoriteRecall1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteRecall2Key [
	"This method was automatically generated"
	^ FavoriteRecall2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteRecall3Key [
	"This method was automatically generated"
	^ FavoriteRecall3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteStore0Key [
	"This method was automatically generated"
	^ FavoriteStore0Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteStore1Key [
	"This method was automatically generated"
	^ FavoriteStore1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteStore2Key [
	"This method was automatically generated"
	^ FavoriteStore2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FavoriteStore3Key [
	"This method was automatically generated"
	^ FavoriteStore3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FinalModeKey [
	"This method was automatically generated"
	^ FinalModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FindKey [
	"This method was automatically generated"
	^ FindKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FnKey [
	"This method was automatically generated"
	^ FnKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> FnLockKey [
	"This method was automatically generated"
	^ FnLockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GoBackKey [
	"This method was automatically generated"
	^ GoBackKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GoHomeKey [
	"This method was automatically generated"
	^ GoHomeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GroupFirstKey [
	"This method was automatically generated"
	^ GroupFirstKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GroupLastKey [
	"This method was automatically generated"
	^ GroupLastKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GroupNextKey [
	"This method was automatically generated"
	^ GroupNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GroupPreviousKey [
	"This method was automatically generated"
	^ GroupPreviousKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GuideKey [
	"This method was automatically generated"
	^ GuideKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GuideNextDayKey [
	"This method was automatically generated"
	^ GuideNextDayKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> GuidePreviousDayKey [
	"This method was automatically generated"
	^ GuidePreviousDayKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HangulModeKey [
	"This method was automatically generated"
	^ HangulModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HanjaModeKey [
	"This method was automatically generated"
	^ HanjaModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HankakuKey [
	"This method was automatically generated"
	^ HankakuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HeadsetHookKey [
	"This method was automatically generated"
	^ HeadsetHookKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HelpKey [
	"This method was automatically generated"
	^ HelpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HibernateKey [
	"This method was automatically generated"
	^ HibernateKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HiraganaKatakanaKey [
	"This method was automatically generated"
	^ HiraganaKatakanaKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HiraganaKey [
	"This method was automatically generated"
	^ HiraganaKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HomeKey [
	"This method was automatically generated"
	^ HomeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> HyperKey [
	"This method was automatically generated"
	^ HyperKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> InfoKey [
	"This method was automatically generated"
	^ InfoKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> InsertKey [
	"This method was automatically generated"
	^ InsertKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> InstantReplayKey [
	"This method was automatically generated"
	^ InstantReplayKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> JunjaModeKey [
	"This method was automatically generated"
	^ JunjaModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> KanaModeKey [
	"This method was automatically generated"
	^ KanaModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> KanjiModeKey [
	"This method was automatically generated"
	^ KanjiModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> KatakanaKey [
	"This method was automatically generated"
	^ KatakanaKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Key11Key [
	"This method was automatically generated"
	^ Key11Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Key12Key [
	"This method was automatically generated"
	^ Key12Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LastNumberRedialKey [
	"This method was automatically generated"
	^ LastNumberRedialKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchApplication1Key [
	"This method was automatically generated"
	^ LaunchApplication1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchApplication2Key [
	"This method was automatically generated"
	^ LaunchApplication2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchCalendarKey [
	"This method was automatically generated"
	^ LaunchCalendarKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchContactsKey [
	"This method was automatically generated"
	^ LaunchContactsKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchMailKey [
	"This method was automatically generated"
	^ LaunchMailKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchMediaPlayerKey [
	"This method was automatically generated"
	^ LaunchMediaPlayerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchMusicPlayerKey [
	"This method was automatically generated"
	^ LaunchMusicPlayerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchPhoneKey [
	"This method was automatically generated"
	^ LaunchPhoneKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchScreenSaverKey [
	"This method was automatically generated"
	^ LaunchScreenSaverKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchSpreadsheetKey [
	"This method was automatically generated"
	^ LaunchSpreadsheetKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchWebBrowserKey [
	"This method was automatically generated"
	^ LaunchWebBrowserKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchWebCamKey [
	"This method was automatically generated"
	^ LaunchWebCamKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LaunchWordProcessorKey [
	"This method was automatically generated"
	^ LaunchWordProcessorKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LinkKey [
	"This method was automatically generated"
	^ LinkKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ListProgramKey [
	"This method was automatically generated"
	^ ListProgramKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LiveContentKey [
	"This method was automatically generated"
	^ LiveContentKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LockKey [
	"This method was automatically generated"
	^ LockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> LogOffKey [
	"This method was automatically generated"
	^ LogOffKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MailForwardKey [
	"This method was automatically generated"
	^ MailForwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MailReplyKey [
	"This method was automatically generated"
	^ MailReplyKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MailSendKey [
	"This method was automatically generated"
	^ MailSendKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MannerModeKey [
	"This method was automatically generated"
	^ MannerModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaAppsKey [
	"This method was automatically generated"
	^ MediaAppsKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaAudioTrackKey [
	"This method was automatically generated"
	^ MediaAudioTrackKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaCloseKey [
	"This method was automatically generated"
	^ MediaCloseKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaFastForwardKey [
	"This method was automatically generated"
	^ MediaFastForwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaLastKey [
	"This method was automatically generated"
	^ MediaLastKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaPauseKey [
	"This method was automatically generated"
	^ MediaPauseKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaPlayKey [
	"This method was automatically generated"
	^ MediaPlayKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaPlayPauseKey [
	"This method was automatically generated"
	^ MediaPlayPauseKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaRecordKey [
	"This method was automatically generated"
	^ MediaRecordKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaRewindKey [
	"This method was automatically generated"
	^ MediaRewindKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaSkipBackwardKey [
	"This method was automatically generated"
	^ MediaSkipBackwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaSkipForwardKey [
	"This method was automatically generated"
	^ MediaSkipForwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaStepBackwardKey [
	"This method was automatically generated"
	^ MediaStepBackwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaStepForwardKey [
	"This method was automatically generated"
	^ MediaStepForwardKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaStopKey [
	"This method was automatically generated"
	^ MediaStopKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaTopMenuKey [
	"This method was automatically generated"
	^ MediaTopMenuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaTrackNextKey [
	"This method was automatically generated"
	^ MediaTrackNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MediaTrackPreviousKey [
	"This method was automatically generated"
	^ MediaTrackPreviousKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MetaKey [
	"This method was automatically generated"
	^ MetaKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MicrophoneToggleKey [
	"This method was automatically generated"
	^ MicrophoneToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MicrophoneVolumeDownKey [
	"This method was automatically generated"
	^ MicrophoneVolumeDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MicrophoneVolumeMuteKey [
	"This method was automatically generated"
	^ MicrophoneVolumeMuteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> MicrophoneVolumeUpKey [
	"This method was automatically generated"
	^ MicrophoneVolumeUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ModeChangeKey [
	"This method was automatically generated"
	^ ModeChangeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NavigateInKey [
	"This method was automatically generated"
	^ NavigateInKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NavigateNextKey [
	"This method was automatically generated"
	^ NavigateNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NavigateOutKey [
	"This method was automatically generated"
	^ NavigateOutKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NavigatePreviousKey [
	"This method was automatically generated"
	^ NavigatePreviousKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NewKey [
	"This method was automatically generated"
	^ NewKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NextCandidateKey [
	"This method was automatically generated"
	^ NextCandidateKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NextFavoriteChannelKey [
	"This method was automatically generated"
	^ NextFavoriteChannelKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NextUserProfileKey [
	"This method was automatically generated"
	^ NextUserProfileKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NonConvertKey [
	"This method was automatically generated"
	^ NonConvertKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NotificationKey [
	"This method was automatically generated"
	^ NotificationKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> NumLockKey [
	"This method was automatically generated"
	^ NumLockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> OnDemandKey [
	"This method was automatically generated"
	^ OnDemandKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> OpenKey [
	"This method was automatically generated"
	^ OpenKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PageDownKey [
	"This method was automatically generated"
	^ PageDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PageUpKey [
	"This method was automatically generated"
	^ PageUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PairingKey [
	"This method was automatically generated"
	^ PairingKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PasteKey [
	"This method was automatically generated"
	^ PasteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PauseKey [
	"This method was automatically generated"
	^ PauseKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PinPDownKey [
	"This method was automatically generated"
	^ PinPDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PinPMoveKey [
	"This method was automatically generated"
	^ PinPMoveKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PinPToggleKey [
	"This method was automatically generated"
	^ PinPToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PinPUpKey [
	"This method was automatically generated"
	^ PinPUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PlayKey [
	"This method was automatically generated"
	^ PlayKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PlaySpeedDownKey [
	"This method was automatically generated"
	^ PlaySpeedDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PlaySpeedResetKey [
	"This method was automatically generated"
	^ PlaySpeedResetKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PlaySpeedUpKey [
	"This method was automatically generated"
	^ PlaySpeedUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PowerKey [
	"This method was automatically generated"
	^ PowerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PowerOffKey [
	"This method was automatically generated"
	^ PowerOffKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PreviousCandidateKey [
	"This method was automatically generated"
	^ PreviousCandidateKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PrintKey [
	"This method was automatically generated"
	^ PrintKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PrintScreenKey [
	"This method was automatically generated"
	^ PrintScreenKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ProcessKey [
	"This method was automatically generated"
	^ ProcessKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> PropsKey [
	"This method was automatically generated"
	^ PropsKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RandomToggleKey [
	"This method was automatically generated"
	^ RandomToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RcLowBatteryKey [
	"This method was automatically generated"
	^ RcLowBatteryKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RecordSpeedNextKey [
	"This method was automatically generated"
	^ RecordSpeedNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RedoKey [
	"This method was automatically generated"
	^ RedoKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RfBypassKey [
	"This method was automatically generated"
	^ RfBypassKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> RomajiKey [
	"This method was automatically generated"
	^ RomajiKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> STBInputKey [
	"This method was automatically generated"
	^ STBInputKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> STBPowerKey [
	"This method was automatically generated"
	^ STBPowerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SaveKey [
	"This method was automatically generated"
	^ SaveKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ScanChannelsToggleKey [
	"This method was automatically generated"
	^ ScanChannelsToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ScreenModeNextKey [
	"This method was automatically generated"
	^ ScreenModeNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ScrollLockKey [
	"This method was automatically generated"
	^ ScrollLockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SelectKey [
	"This method was automatically generated"
	^ SelectKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SettingsKey [
	"This method was automatically generated"
	^ SettingsKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ShiftKey [
	"This method was automatically generated"
	^ ShiftKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SingleCandidateKey [
	"This method was automatically generated"
	^ SingleCandidateKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Soft1Key [
	"This method was automatically generated"
	^ Soft1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Soft2Key [
	"This method was automatically generated"
	^ Soft2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Soft3Key [
	"This method was automatically generated"
	^ Soft3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> Soft4Key [
	"This method was automatically generated"
	^ Soft4Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SpaceKey [
	"This method was automatically generated"
	^ SpaceKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SpeechCorrectionListKey [
	"This method was automatically generated"
	^ SpeechCorrectionListKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SpeechInputToggleKey [
	"This method was automatically generated"
	^ SpeechInputToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SpellCheckKey [
	"This method was automatically generated"
	^ SpellCheckKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SplitScreenToggleKey [
	"This method was automatically generated"
	^ SplitScreenToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> StandbyKey [
	"This method was automatically generated"
	^ StandbyKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SubtitleKey [
	"This method was automatically generated"
	^ SubtitleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SuperKey [
	"This method was automatically generated"
	^ SuperKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SymbolKey [
	"This method was automatically generated"
	^ SymbolKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> SymbolLockKey [
	"This method was automatically generated"
	^ SymbolLockKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TV3DModeKey [
	"This method was automatically generated"
	^ TV3DModeKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVAntennaCableKey [
	"This method was automatically generated"
	^ TVAntennaCableKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVAudioDescriptionKey [
	"This method was automatically generated"
	^ TVAudioDescriptionKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVAudioDescriptionMixDownKey [
	"This method was automatically generated"
	^ TVAudioDescriptionMixDownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVAudioDescriptionMixUpKey [
	"This method was automatically generated"
	^ TVAudioDescriptionMixUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVContentsMenuKey [
	"This method was automatically generated"
	^ TVContentsMenuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVDataServiceKey [
	"This method was automatically generated"
	^ TVDataServiceKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputComponent1Key [
	"This method was automatically generated"
	^ TVInputComponent1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputComponent2Key [
	"This method was automatically generated"
	^ TVInputComponent2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputComposite1Key [
	"This method was automatically generated"
	^ TVInputComposite1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputComposite2Key [
	"This method was automatically generated"
	^ TVInputComposite2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputHDMI1Key [
	"This method was automatically generated"
	^ TVInputHDMI1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputHDMI2Key [
	"This method was automatically generated"
	^ TVInputHDMI2Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputHDMI3Key [
	"This method was automatically generated"
	^ TVInputHDMI3Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputHDMI4Key [
	"This method was automatically generated"
	^ TVInputHDMI4Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputKey [
	"This method was automatically generated"
	^ TVInputKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVInputVGA1Key [
	"This method was automatically generated"
	^ TVInputVGA1Key
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVKey [
	"This method was automatically generated"
	^ TVKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVMediaContextKey [
	"This method was automatically generated"
	^ TVMediaContextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVNetworkKey [
	"This method was automatically generated"
	^ TVNetworkKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVNumberEntryKey [
	"This method was automatically generated"
	^ TVNumberEntryKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVPowerKey [
	"This method was automatically generated"
	^ TVPowerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVRadioServiceKey [
	"This method was automatically generated"
	^ TVRadioServiceKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVSatelliteBSKey [
	"This method was automatically generated"
	^ TVSatelliteBSKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVSatelliteCSKey [
	"This method was automatically generated"
	^ TVSatelliteCSKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVSatelliteKey [
	"This method was automatically generated"
	^ TVSatelliteKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVSatelliteToggleKey [
	"This method was automatically generated"
	^ TVSatelliteToggleKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVTerrestrialAnalogKey [
	"This method was automatically generated"
	^ TVTerrestrialAnalogKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVTerrestrialDigitalKey [
	"This method was automatically generated"
	^ TVTerrestrialDigitalKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TVTimerKey [
	"This method was automatically generated"
	^ TVTimerKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TabKey [
	"This method was automatically generated"
	^ TabKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> TeletextKey [
	"This method was automatically generated"
	^ TeletextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> UndoKey [
	"This method was automatically generated"
	^ UndoKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> UnknownKey [
	"This method was automatically generated"
	^ UnknownKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> VideoModeNextKey [
	"This method was automatically generated"
	^ VideoModeNextKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> VoiceDialKey [
	"This method was automatically generated"
	^ VoiceDialKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> WakeUpKey [
	"This method was automatically generated"
	^ WakeUpKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> WinkKey [
	"This method was automatically generated"
	^ WinkKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ZenkakuHankakuKey [
	"This method was automatically generated"
	^ ZenkakuHankakuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ZenkakuKey [
	"This method was automatically generated"
	^ ZenkakuKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ZoomInKey [
	"This method was automatically generated"
	^ ZoomInKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ZoomOutKey [
	"This method was automatically generated"
	^ ZoomOutKey
]

{ #category : #'accessing enum' }
Winit30NamedKey class >> ZoomToggleKey [
	"This method was automatically generated"
	^ ZoomToggleKey
]

{ #category : #'enum declaration' }
Winit30NamedKey class >> enumDecl [
	^ (super enumDecl pairsCollect: [ :aName :anIndex | { (aName asString, 'Key' asSymbol) . anIndex} ]) flattened
]

{ #category : #'enum declaration' }
Winit30NamedKey class >> externalDeclaration [
	"
	self rebuildEnumAccessors
	"

	^ #(
	Unknown,
	" The `Alt` (Alternative) key."
    ""
    " This key enables the alternate modifier function for interpreting concurrent or subsequent"
    " keyboard input. This key value is also used for the Apple <kbd>Option</kbd> key."
    Alt,
    " The Alternate Graphics (<kbd>AltGr</kbd> or <kbd>AltGraph</kbd>) key."
    ""
    " This key is used enable the ISO Level 3 shift modifier (the standard `Shift` key is the"
    " level 2 modifier)."
    AltGraph,
    " The `Caps Lock` (Capital) key."
    ""
    " Toggle capital character lock function for interpreting subsequent keyboard input event."
    CapsLock,
    " The `Control` or `Ctrl` key."
    ""
    " Used to enable control modifier function for interpreting concurrent or subsequent keyboard"
    " input."
    Control,
    " The Function switch `Fn` key. Activating this key simultaneously with another key changes"
    " that key’s value to an alternate character or function. This key is often handled directly"
    " in the keyboard hardware and does not usually generate key events."
    Fn,
    " The Function-Lock (`FnLock` or `F-Lock`) key. Activating this key switches the mode of the"
    " keyboard to changes some keys' values to an alternate character or function. This key is"
    " often handled directly in the keyboard hardware and does not usually generate key events."
    FnLock,
    " The `NumLock` or Number Lock key. Used to toggle numpad mode function for interpreting"
    " subsequent keyboard input."
    NumLock,
    " Toggle between scrolling and cursor movement modes."
    ScrollLock,
    " Used to enable shift modifier function for interpreting concurrent or subsequent keyboard"
    " input."
    Shift,
    " The Symbol modifier key (used on some virtual keyboards)."
    Symbol,
    SymbolLock,
    " Legacy modifier key. Also called `Super` in certain places."
    Meta,
    " Legacy modifier key."
    Hyper,
    " Used to enable `super` modifier function for interpreting concurrent or subsequent keyboard"
    " input. This key value is used for the `Windows Logo` key and the Apple `Command` or `⌘`"
    " key."
    ""
    " Note: In some contexts (e.g. the Web) this is referred to as the `Meta` key."
    Super,
    " The `Enter` or `↵` key. Used to activate current selection or accept current input. This"
    " key value is also used for the `Return` (Macintosh numpad) key. This key value is also"
    " used for the Android `KEYCODE_DPAD_CENTER`."
    Enter,
    " The Horizontal Tabulation `Tab` key."
    Tab,
    " Used in text to insert a space between words. Usually located below the character keys."
    Space,
    " Navigate or traverse downward. (`KEYCODE_DPAD_DOWN`)"
    ArrowDown,
    " Navigate or traverse leftward. (`KEYCODE_DPAD_LEFT`)"
    ArrowLeft,
    " Navigate or traverse rightward. (`KEYCODE_DPAD_RIGHT`)"
    ArrowRight,
    " Navigate or traverse upward. (`KEYCODE_DPAD_UP`)"
    ArrowUp,
    " The End key, used with keyboard entry to go to the end of content (`KEYCODE_MOVE_END`)."
    End,
    " The Home key, used with keyboard entry, to go to start of content (`KEYCODE_MOVE_HOME`)."
    " For the mobile phone `Home` key (which goes to the phone’s main screen), use [`GoHome`]."
    ""
    " [`GoHome`]: Self::GoHome"
    Home,
    " Scroll down or display next page of content."
    PageDown,
    " Scroll up or display previous page of content."
    PageUp,
    " Used to remove the character to the left of the cursor. This key value is also used for"
    " the key labeled `Delete` on MacOS keyboards."
    Backspace,
    " Remove the currently selected input."
    Clear,
    " Copy the current selection. (`APPCOMMAND_COPY`)"
    Copy,
    " The Cursor Select key."
    CrSel,
    " Cut the current selection. (`APPCOMMAND_CUT`)"
    Cut,
    " Used to delete the character to the right of the cursor. This key value is also used for"
    " the key labeled `Delete` on MacOS keyboards when `Fn` is active."
    Delete,
    " The Erase to End of Field key. This key deletes all characters from the current cursor"
    " position to the end of the current field."
    EraseEof,
    " The Extend Selection (Exsel) key."
    ExSel,
    " Toggle between text modes for insertion or overtyping."
    " (`KEYCODE_INSERT`)"
    Insert,
    " The Paste key. (`APPCOMMAND_PASTE`)"
    Paste,
    " Redo the last action. (`APPCOMMAND_REDO`)"
    Redo,
    " Undo the last action. (`APPCOMMAND_UNDO`)"
    Undo,
    " The Accept (Commit, OK) key. Accept current option or input method sequence conversion."
    Accept,
    " Redo or repeat an action."
    Again,
    " The Attention (Attn) key."
    Attn,
    Cancel,
    " Show the application’s context menu."
    " This key is commonly found between the right `Super` key and the right `Control` key."
    ContextMenu,
    " The `Esc` key. This key was originally used to initiate an escape sequence, but is"
    " now more generally used to exit or `escape` the current context, such as closing a dialog"
    " or exiting full screen mode."
    Escape,
    Execute,
    " Open the Find dialog. (`APPCOMMAND_FIND`)"
    Find,
    " Open a help dialog or toggle display of help information. (`APPCOMMAND_HELP`,"
    " `KEYCODE_HELP`)"
    Help,
    " Pause the current state or application (as appropriate)."
    ""
    " Note: Do not use this value for the `Pause` button on media controllers. Use ``MediaPause``"
    " instead."
    Pause,
    " Play or resume the current state or application (as appropriate)."
    ""
    " Note: Do not use this value for the `Play` button on media controllers. Use ``MediaPlay``"
    " instead."
    Play,
    " The properties (Props) key."
    Props,
    Select,
    " The ZoomIn key. (`KEYCODE_ZOOM_IN`)"
    ZoomIn,
    " The ZoomOut key. (`KEYCODE_ZOOM_OUT`)"
    ZoomOut,
    " The Brightness Down key. Typically controls the display brightness."
    " (`KEYCODE_BRIGHTNESS_DOWN`)"
    BrightnessDown,
    " The Brightness Up key. Typically controls the display brightness. (`KEYCODE_BRIGHTNESS_UP`)"
    BrightnessUp,
    " Toggle removable media to eject (open) and insert (close) state. (`KEYCODE_MEDIA_EJECT`)"
    Eject,
    LogOff,
    " Toggle power state. (`KEYCODE_POWER`)"
    " Note: Note: Some devices might not expose this key to the operating environment."
    Power,
    " The `PowerOff` key. Sometime called `PowerDown`."
    PowerOff,
    " Initiate print-screen function."
    PrintScreen,
    " The Hibernate key. This key saves the current state of the computer to disk so that it can"
    " be restored. The computer will then shutdown."
    Hibernate,
    " The Standby key. This key turns off the display and places the computer into a low-power"
    " mode without completely shutting down. It is sometimes labelled `Suspend` or `Sleep` key."
    " (`KEYCODE_SLEEP`)"
    Standby,
    " The WakeUp key. (`KEYCODE_WAKEUP`)"
    WakeUp,
    " Initiate the multi-candidate mode."
    AllCandidates,
    Alphanumeric,
    " Initiate the Code Input mode to allow characters to be entered by"
    " their code points."
    CodeInput,
    " The Compose key, also known as `Multi_key` on the X Window System. This key acts in a"
    " manner similar to a dead key, triggering a mode where subsequent key presses are combined"
    " to produce a different character."
    Compose,
    " Convert the current input method sequence."
    Convert,
    " The Final Mode `Final` key used on some Asian keyboards, to enable the final mode for IMEs."
    FinalMode,
    " Switch to the first character group. (ISO/IEC 9995)"
    GroupFirst,
    " Switch to the last character group. (ISO/IEC 9995)"
    GroupLast,
    " Switch to the next character group. (ISO/IEC 9995)"
    GroupNext,
    " Switch to the previous character group. (ISO/IEC 9995)"
    GroupPrevious,
    " Toggle between or cycle through input modes of IMEs."
    ModeChange,
    NextCandidate,
    " Accept current input method sequence without"
    " conversion in IMEs."
    NonConvert,
    PreviousCandidate,
    Process,
    SingleCandidate,
    " Toggle between Hangul and English modes."
    HangulMode,
    HanjaMode,
    JunjaMode,
    " The Eisu key. This key may close the IME, but its purpose is defined by the current IME."
    " (`KEYCODE_EISU`)"
    Eisu,
    " The (Half-Width) Characters key."
    Hankaku,
    " The Hiragana (Japanese Kana characters) key."
    Hiragana,
    " The Hiragana/Katakana toggle key. (`KEYCODE_KATAKANA_HIRAGANA`)"
    HiraganaKatakana,
    " The Kana Mode (Kana Lock) key. This key is used to enter hiragana mode (typically from"
    " romaji mode)."
    KanaMode,
    " The Kanji (Japanese name for ideographic characters of Chinese origin) Mode key. This key"
    " is typically used to switch to a hiragana keyboard for the purpose of converting input"
    " into kanji. (`KEYCODE_KANA`)"
    KanjiMode,
    " The Katakana (Japanese Kana characters) key."
    Katakana,
    " The Roman characters function key."
    Romaji,
    " The Zenkaku (Full-Width) Characters key."
    Zenkaku,
    " The Zenkaku/Hankaku (full-width/half-width) toggle key. (`KEYCODE_ZENKAKU_HANKAKU`)"
    ZenkakuHankaku,
    " General purpose virtual function key, as index 1."
    Soft1,
    " General purpose virtual function key, as index 2."
    Soft2,
    " General purpose virtual function key, as index 3."
    Soft3,
    " General purpose virtual function key, as index 4."
    Soft4,
    " Select next (numerically or logically) lower channel. (`APPCOMMAND_MEDIA_CHANNEL_DOWN`,"
    " `KEYCODE_CHANNEL_DOWN`)"
    ChannelDown,
    " Select next (numerically or logically) higher channel. (`APPCOMMAND_MEDIA_CHANNEL_UP`,"
    " `KEYCODE_CHANNEL_UP`)"
    ChannelUp,
    " Close the current document or message (Note: This doesn’t close the application)."
    " (`APPCOMMAND_CLOSE`)"
    Close,
    " Open an editor to forward the current message. (`APPCOMMAND_FORWARD_MAIL`)"
    MailForward,
    " Open an editor to reply to the current message. (`APPCOMMAND_REPLY_TO_MAIL`)"
    MailReply,
    " Send the current message. (`APPCOMMAND_SEND_MAIL`)"
    MailSend,
    " Close the current media, for example to close a CD or DVD tray. (`KEYCODE_MEDIA_CLOSE`)"
    MediaClose,
    " Initiate or continue forward playback at faster than normal speed, or increase speed if"
    " already fast forwarding. (`APPCOMMAND_MEDIA_FAST_FORWARD`, `KEYCODE_MEDIA_FAST_FORWARD`)"
    MediaFastForward,
    " Pause the currently playing media. (`APPCOMMAND_MEDIA_PAUSE`, `KEYCODE_MEDIA_PAUSE`)"
    ""
    " Note: Media controller devices should use this value rather than ``Pause`` for their pause"
    " keys."
    MediaPause,
    " Initiate or continue media playback at normal speed, if not currently playing at normal"
    " speed. (`APPCOMMAND_MEDIA_PLAY`, `KEYCODE_MEDIA_PLAY`)"
    MediaPlay,
    " Toggle media between play and pause states. (`APPCOMMAND_MEDIA_PLAY_PAUSE`,"
    " `KEYCODE_MEDIA_PLAY_PAUSE`)"
    MediaPlayPause,
    " Initiate or resume recording of currently selected media. (`APPCOMMAND_MEDIA_RECORD`,"
    " `KEYCODE_MEDIA_RECORD`)"
    MediaRecord,
    " Initiate or continue reverse playback at faster than normal speed, or increase speed if"
    " already rewinding. (`APPCOMMAND_MEDIA_REWIND`, `KEYCODE_MEDIA_REWIND`)"
    MediaRewind,
    " Stop media playing, pausing, forwarding, rewinding, or recording, if not already stopped."
    " (`APPCOMMAND_MEDIA_STOP`, `KEYCODE_MEDIA_STOP`)"
    MediaStop,
    " Seek to next media or program track. (`APPCOMMAND_MEDIA_NEXTTRACK`, `KEYCODE_MEDIA_NEXT`)"
    MediaTrackNext,
    " Seek to previous media or program track. (`APPCOMMAND_MEDIA_PREVIOUSTRACK`,"
    " `KEYCODE_MEDIA_PREVIOUS`)"
    MediaTrackPrevious,
    " Open a new document or message. (`APPCOMMAND_NEW`)"
    New,
    " Open an existing document or message. (`APPCOMMAND_OPEN`)"
    Open,
    " Print the current document or message. (`APPCOMMAND_PRINT`)"
    Print,
    " Save the current document or message. (`APPCOMMAND_SAVE`)"
    Save,
    " Spellcheck the current document or selection. (`APPCOMMAND_SPELL_CHECK`)"
    SpellCheck,
    " The `11` key found on media numpads that"
    " have buttons from `1` ... `12`."
    Key11,
    " The `12` key found on media numpads that"
    " have buttons from `1` ... `12`."
    Key12,
    " Adjust audio balance leftward. (`VK_AUDIO_BALANCE_LEFT`)"
    AudioBalanceLeft,
    " Adjust audio balance rightward. (`VK_AUDIO_BALANCE_RIGHT`)"
    AudioBalanceRight,
    " Decrease audio bass boost or cycle down through bass boost states. (`APPCOMMAND_BASS_DOWN`,"
    " `VK_BASS_BOOST_DOWN`)"
    AudioBassBoostDown,
    " Toggle bass boost on/off. (`APPCOMMAND_BASS_BOOST`)"
    AudioBassBoostToggle,
    " Increase audio bass boost or cycle up through bass boost states. (`APPCOMMAND_BASS_UP`,"
    " `VK_BASS_BOOST_UP`)"
    AudioBassBoostUp,
    " Adjust audio fader towards front. (`VK_FADER_FRONT`)"
    AudioFaderFront,
    " Adjust audio fader towards rear. (`VK_FADER_REAR`)"
    AudioFaderRear,
    " Advance surround audio mode to next available mode. (`VK_SURROUND_MODE_NEXT`)"
    AudioSurroundModeNext,
    " Decrease treble. (`APPCOMMAND_TREBLE_DOWN`)"
    AudioTrebleDown,
    " Increase treble. (`APPCOMMAND_TREBLE_UP`)"
    AudioTrebleUp,
    " Decrease audio volume. (`APPCOMMAND_VOLUME_DOWN`, `KEYCODE_VOLUME_DOWN`)"
    AudioVolumeDown,
    " Increase audio volume. (`APPCOMMAND_VOLUME_UP`, `KEYCODE_VOLUME_UP`)"
    AudioVolumeUp,
    " Toggle between muted state and prior volume level. (`APPCOMMAND_VOLUME_MUTE`,"
    " `KEYCODE_VOLUME_MUTE`)"
    AudioVolumeMute,
    " Toggle the microphone on/off. (`APPCOMMAND_MIC_ON_OFF_TOGGLE`)"
    MicrophoneToggle,
    " Decrease microphone volume. (`APPCOMMAND_MICROPHONE_VOLUME_DOWN`)"
    MicrophoneVolumeDown,
    " Increase microphone volume. (`APPCOMMAND_MICROPHONE_VOLUME_UP`)"
    MicrophoneVolumeUp,
    " Mute the microphone. (`APPCOMMAND_MICROPHONE_VOLUME_MUTE`, `KEYCODE_MUTE`)"
    MicrophoneVolumeMute,
    " Show correction list when a word is incorrectly identified. (`APPCOMMAND_CORRECTION_LIST`)"
    SpeechCorrectionList,
    " Toggle between dictation mode and command/control mode."
    " (`APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE`)"
    SpeechInputToggle,
    " The first generic `LaunchApplication` key. This is commonly associated with launching `My"
    " Computer`, and may have a computer symbol on the key. (`APPCOMMAND_LAUNCH_APP1`)"
    LaunchApplication1,
    " The second generic `LaunchApplication` key. This is commonly associated with launching"
    " `Calculator`, and may have a calculator symbol on the key. (`APPCOMMAND_LAUNCH_APP2`,"
    " `KEYCODE_CALCULATOR`)"
    LaunchApplication2,
    " The `Calendar` key. (`KEYCODE_CALENDAR`)"
    LaunchCalendar,
    " The `Contacts` key. (`KEYCODE_CONTACTS`)"
    LaunchContacts,
    " The `Mail` key. (`APPCOMMAND_LAUNCH_MAIL`)"
    LaunchMail,
    " The `Media Player` key. (`APPCOMMAND_LAUNCH_MEDIA_SELECT`)"
    LaunchMediaPlayer,
    LaunchMusicPlayer,
    LaunchPhone,
    LaunchScreenSaver,
    LaunchSpreadsheet,
    LaunchWebBrowser,
    LaunchWebCam,
    LaunchWordProcessor,
    " Navigate to previous content or page in current history. (`APPCOMMAND_BROWSER_BACKWARD`)"
    BrowserBack,
    " Open the list of browser favorites. (`APPCOMMAND_BROWSER_FAVORITES`)"
    BrowserFavorites,
    " Navigate to next content or page in current history. (`APPCOMMAND_BROWSER_FORWARD`)"
    BrowserForward,
    " Go to the user’s preferred home page. (`APPCOMMAND_BROWSER_HOME`)"
    BrowserHome,
    " Refresh the current page or content. (`APPCOMMAND_BROWSER_REFRESH`)"
    BrowserRefresh,
    " Call up the user’s preferred search page. (`APPCOMMAND_BROWSER_SEARCH`)"
    BrowserSearch,
    " Stop loading the current page or content. (`APPCOMMAND_BROWSER_STOP`)"
    BrowserStop,
    " The Application switch key, which provides a list of recent apps to switch between."
    " (`KEYCODE_APP_SWITCH`)"
    AppSwitch,
    " The Call key. (`KEYCODE_CALL`)"
    Call,
    " The Camera key. (`KEYCODE_CAMERA`)"
    Camera,
    " The Camera focus key. (`KEYCODE_FOCUS`)"
    CameraFocus,
    " The End Call key. (`KEYCODE_ENDCALL`)"
    EndCall,
    " The Back key. (`KEYCODE_BACK`)"
    GoBack,
    " The Home key, which goes to the phone’s main screen. (`KEYCODE_HOME`)"
    GoHome,
    " The Headset Hook key. (`KEYCODE_HEADSETHOOK`)"
    HeadsetHook,
    LastNumberRedial,
    " The Notification key. (`KEYCODE_NOTIFICATION`)"
    Notification,
    " Toggle between manner mode state: silent, vibrate, ring, ... (`KEYCODE_MANNER_MODE`)"
    MannerMode,
    VoiceDial,
    " Switch to viewing TV. (`KEYCODE_TV`)"
    TV,
    " TV 3D Mode. (`KEYCODE_3D_MODE`)"
    TV3DMode,
    " Toggle between antenna and cable input. (`KEYCODE_TV_ANTENNA_CABLE`)"
    TVAntennaCable,
    " Audio description. (`KEYCODE_TV_AUDIO_DESCRIPTION`)"
    TVAudioDescription,
    " Audio description mixing volume down. (`KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN`)"
    TVAudioDescriptionMixDown,
    " Audio description mixing volume up. (`KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP`)"
    TVAudioDescriptionMixUp,
    " Contents menu. (`KEYCODE_TV_CONTENTS_MENU`)"
    TVContentsMenu,
    " Contents menu. (`KEYCODE_TV_DATA_SERVICE`)"
    TVDataService,
    " Switch the input mode on an external TV. (`KEYCODE_TV_INPUT`)"
    TVInput,
    " Switch to component input #1. (`KEYCODE_TV_INPUT_COMPONENT_1`)"
    TVInputComponent1,
    " Switch to component input #2. (`KEYCODE_TV_INPUT_COMPONENT_2`)"
    TVInputComponent2,
    " Switch to composite input #1. (`KEYCODE_TV_INPUT_COMPOSITE_1`)"
    TVInputComposite1,
    " Switch to composite input #2. (`KEYCODE_TV_INPUT_COMPOSITE_2`)"
    TVInputComposite2,
    " Switch to HDMI input #1. (`KEYCODE_TV_INPUT_HDMI_1`)"
    TVInputHDMI1,
    " Switch to HDMI input #2. (`KEYCODE_TV_INPUT_HDMI_2`)"
    TVInputHDMI2,
    " Switch to HDMI input #3. (`KEYCODE_TV_INPUT_HDMI_3`)"
    TVInputHDMI3,
    " Switch to HDMI input #4. (`KEYCODE_TV_INPUT_HDMI_4`)"
    TVInputHDMI4,
    " Switch to VGA input #1. (`KEYCODE_TV_INPUT_VGA_1`)"
    TVInputVGA1,
    " Media context menu. (`KEYCODE_TV_MEDIA_CONTEXT_MENU`)"
    TVMediaContext,
    " Toggle network. (`KEYCODE_TV_NETWORK`)"
    TVNetwork,
    " Number entry. (`KEYCODE_TV_NUMBER_ENTRY`)"
    TVNumberEntry,
    " Toggle the power on an external TV. (`KEYCODE_TV_POWER`)"
    TVPower,
    " Radio. (`KEYCODE_TV_RADIO_SERVICE`)"
    TVRadioService,
    " Satellite. (`KEYCODE_TV_SATELLITE`)"
    TVSatellite,
    " Broadcast Satellite. (`KEYCODE_TV_SATELLITE_BS`)"
    TVSatelliteBS,
    " Communication Satellite. (`KEYCODE_TV_SATELLITE_CS`)"
    TVSatelliteCS,
    " Toggle between available satellites. (`KEYCODE_TV_SATELLITE_SERVICE`)"
    TVSatelliteToggle,
    " Analog Terrestrial. (`KEYCODE_TV_TERRESTRIAL_ANALOG`)"
    TVTerrestrialAnalog,
    " Digital Terrestrial. (`KEYCODE_TV_TERRESTRIAL_DIGITAL`)"
    TVTerrestrialDigital,
    " Timer programming. (`KEYCODE_TV_TIMER_PROGRAMMING`)"
    TVTimer,
    " Switch the input mode on an external AVR (audio/video receiver). (`KEYCODE_AVR_INPUT`)"
    AVRInput,
    " Toggle the power on an external AVR (audio/video receiver). (`KEYCODE_AVR_POWER`)"
    AVRPower,
    " General purpose color-coded media function key, as index 0 (red). (`VK_COLORED_KEY_0`,"
    " `KEYCODE_PROG_RED`)"
    ColorF0Red,
    " General purpose color-coded media function key, as index 1 (green). (`VK_COLORED_KEY_1`,"
    " `KEYCODE_PROG_GREEN`)"
    ColorF1Green,
    " General purpose color-coded media function key, as index 2 (yellow). (`VK_COLORED_KEY_2`,"
    " `KEYCODE_PROG_YELLOW`)"
    ColorF2Yellow,
    " General purpose color-coded media function key, as index 3 (blue). (`VK_COLORED_KEY_3`,"
    " `KEYCODE_PROG_BLUE`)"
    ColorF3Blue,
    " General purpose color-coded media function key, as index 4 (grey). (`VK_COLORED_KEY_4`)"
    ColorF4Grey,
    " General purpose color-coded media function key, as index 5 (brown). (`VK_COLORED_KEY_5`)"
    ColorF5Brown,
    " Toggle the display of Closed Captions. (`VK_CC`, `KEYCODE_CAPTIONS`)"
    ClosedCaptionToggle,
    " Adjust brightness of device, by toggling between or cycling through states. (`VK_DIMMER`)"
    Dimmer,
    " Swap video sources. (`VK_DISPLAY_SWAP`)"
    DisplaySwap,
    " Select Digital Video Rrecorder. (`KEYCODE_DVR`)"
    DVR,
    " Exit the current application. (`VK_EXIT`)"
    Exit,
    " Clear program or content stored as favorite 0. (`VK_CLEAR_FAVORITE_0`)"
    FavoriteClear0,
    " Clear program or content stored as favorite 1. (`VK_CLEAR_FAVORITE_1`)"
    FavoriteClear1,
    " Clear program or content stored as favorite 2. (`VK_CLEAR_FAVORITE_2`)"
    FavoriteClear2,
    " Clear program or content stored as favorite 3. (`VK_CLEAR_FAVORITE_3`)"
    FavoriteClear3,
    " Select (recall) program or content stored as favorite 0. (`VK_RECALL_FAVORITE_0`)"
    FavoriteRecall0,
    " Select (recall) program or content stored as favorite 1. (`VK_RECALL_FAVORITE_1`)"
    FavoriteRecall1,
    " Select (recall) program or content stored as favorite 2. (`VK_RECALL_FAVORITE_2`)"
    FavoriteRecall2,
    " Select (recall) program or content stored as favorite 3. (`VK_RECALL_FAVORITE_3`)"
    FavoriteRecall3,
    " Store current program or content as favorite 0. (`VK_STORE_FAVORITE_0`)"
    FavoriteStore0,
    " Store current program or content as favorite 1. (`VK_STORE_FAVORITE_1`)"
    FavoriteStore1,
    " Store current program or content as favorite 2. (`VK_STORE_FAVORITE_2`)"
    FavoriteStore2,
    " Store current program or content as favorite 3. (`VK_STORE_FAVORITE_3`)"
    FavoriteStore3,
    " Toggle display of program or content guide. (`VK_GUIDE`, `KEYCODE_GUIDE`)"
    Guide,
    " If guide is active and displayed, then display next day’s content. (`VK_NEXT_DAY`)"
    GuideNextDay,
    " If guide is active and displayed, then display previous day’s content. (`VK_PREV_DAY`)"
    GuidePreviousDay,
    " Toggle display of information about currently selected context or media. (`VK_INFO`,"
    " `KEYCODE_INFO`)"
    Info,
    " Toggle instant replay. (`VK_INSTANT_REPLAY`)"
    InstantReplay,
    " Launch linked content, if available and appropriate. (`VK_LINK`)"
    Link,
    " List the current program. (`VK_LIST`)"
    ListProgram,
    " Toggle display listing of currently available live content or programs. (`VK_LIVE`)"
    LiveContent,
    " Lock or unlock current content or program. (`VK_LOCK`)"
    Lock,
    " Show a list of media applications: audio/video players and image viewers. (`VK_APPS`)"
    ""
    " Note: Do not confuse this key value with the Windows' `VK_APPS` / `VK_CONTEXT_MENU` key,"
    " which is encoded as ``ContextMenu``."
    MediaApps,
    " Audio track key. (`KEYCODE_MEDIA_AUDIO_TRACK`)"
    MediaAudioTrack,
    " Select previously selected channel or media. (`VK_LAST`, `KEYCODE_LAST_CHANNEL`)"
    MediaLast,
    " Skip backward to next content or program. (`KEYCODE_MEDIA_SKIP_BACKWARD`)"
    MediaSkipBackward,
    " Skip forward to next content or program. (`VK_SKIP`, `KEYCODE_MEDIA_SKIP_FORWARD`)"
    MediaSkipForward,
    " Step backward to next content or program. (`KEYCODE_MEDIA_STEP_BACKWARD`)"
    MediaStepBackward,
    " Step forward to next content or program. (`KEYCODE_MEDIA_STEP_FORWARD`)"
    MediaStepForward,
    " Media top menu. (`KEYCODE_MEDIA_TOP_MENU`)"
    MediaTopMenu,
    " Navigate in. (`KEYCODE_NAVIGATE_IN`)"
    NavigateIn,
    " Navigate to next key. (`KEYCODE_NAVIGATE_NEXT`)"
    NavigateNext,
    " Navigate out. (`KEYCODE_NAVIGATE_OUT`)"
    NavigateOut,
    " Navigate to previous key. (`KEYCODE_NAVIGATE_PREVIOUS`)"
    NavigatePrevious,
    " Cycle to next favorite channel (in favorites list). (`VK_NEXT_FAVORITE_CHANNEL`)"
    NextFavoriteChannel,
    " Cycle to next user profile (if there are multiple user profiles). (`VK_USER`)"
    NextUserProfile,
    " Access on-demand content or programs. (`VK_ON_DEMAND`)"
    OnDemand,
    " Pairing key to pair devices. (`KEYCODE_PAIRING`)"
    Pairing,
    " Move picture-in-picture window down. (`VK_PINP_DOWN`)"
    PinPDown,
    " Move picture-in-picture window. (`VK_PINP_MOVE`)"
    PinPMove,
    " Toggle display of picture-in-picture window. (`VK_PINP_TOGGLE`)"
    PinPToggle,
    " Move picture-in-picture window up. (`VK_PINP_UP`)"
    PinPUp,
    " Decrease media playback speed. (`VK_PLAY_SPEED_DOWN`)"
    PlaySpeedDown,
    " Reset playback to normal speed. (`VK_PLAY_SPEED_RESET`)"
    PlaySpeedReset,
    " Increase media playback speed. (`VK_PLAY_SPEED_UP`)"
    PlaySpeedUp,
    " Toggle random media or content shuffle mode. (`VK_RANDOM_TOGGLE`)"
    RandomToggle,
    " Not a physical key, but this key code is sent when the remote control battery is low."
    " (`VK_RC_LOW_BATTERY`)"
    RcLowBattery,
    " Toggle or cycle between media recording speeds. (`VK_RECORD_SPEED_NEXT`)"
    RecordSpeedNext,
    " Toggle RF (radio frequency) input bypass mode (pass RF input directly to the RF output)."
    " (`VK_RF_BYPASS`)"
    RfBypass,
    " Toggle scan channels mode. (`VK_SCAN_CHANNELS_TOGGLE`)"
    ScanChannelsToggle,
    " Advance display screen mode to next available mode. (`VK_SCREEN_MODE_NEXT`)"
    ScreenModeNext,
    " Toggle display of device settings screen. (`VK_SETTINGS`, `KEYCODE_SETTINGS`)"
    Settings,
    " Toggle split screen mode. (`VK_SPLIT_SCREEN_TOGGLE`)"
    SplitScreenToggle,
    " Switch the input mode on an external STB (set top box). (`KEYCODE_STB_INPUT`)"
    STBInput,
    " Toggle the power on an external STB (set top box). (`KEYCODE_STB_POWER`)"
    STBPower,
    " Toggle display of subtitles, if available. (`VK_SUBTITLE`)"
    Subtitle,
    " Toggle display of teletext, if available (`VK_TELETEXT`, `KEYCODE_TV_TELETEXT`)."
    Teletext,
    " Advance video mode to next available mode. (`VK_VIDEO_MODE_NEXT`)"
    VideoModeNext,
    " Cause device to identify itself in some manner, e.g., audibly or visibly. (`VK_WINK`)"
    Wink,
    " Toggle between full-screen and scaled content, or alter magnification level. (`VK_ZOOM`,"
    " `KEYCODE_TV_ZOOM_MODE`)"
    ZoomToggle,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F1,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F2,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F3,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F4,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F5,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F6,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F7,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F8,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F9,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F10,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F11,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F12,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F13,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F14,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F15,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F16,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F17,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F18,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F19,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F20,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F21,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F22,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F23,
    " General-purpose function key."
    " Usually found at the top of the keyboard."
    F24,
    " General-purpose function key."
    F25,
    " General-purpose function key."
    F26,
    " General-purpose function key."
    F27,
    " General-purpose function key."
    F28,
    " General-purpose function key."
    F29,
    " General-purpose function key."
    F30,
    " General-purpose function key."
    F31,
    " General-purpose function key."
    F32,
    " General-purpose function key."
    F33,
    " General-purpose function key."
    F34,
    " General-purpose function key."
    F35,
	)
]

{ #category : #'enum declaration' }
Winit30NamedKey class >> externalType [
	^ FFIUInt32 new
]

{ #category : #'class initialization' }
Winit30NamedKey class >> initialize [
	super initialize
]

{ #category : #'as yet unclassified' }
Winit30NamedKey >> gtDisplayOn: aStream [
	aStream nextPutAll: self item
]
